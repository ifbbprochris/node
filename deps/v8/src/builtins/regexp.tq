// Copyright 2019 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include 'src/builtins/builtins-regexp-gen.h'

namespace regexp {

  extern macro RegExpBuiltinsAssembler::BranchIfFastRegExp_Strict(
      implicit context: Context)(HeapObject): never labels IsFast,
      IsSlow;
  macro IsFastRegExpStrict(implicit context: Context)(o: HeapObject): bool {
    BranchIfFastRegExp_Strict(o) otherwise return true, return false;
  }

  extern macro RegExpBuiltinsAssembler::BranchIfFastRegExp_Permissive(
      implicit context: Context)(HeapObject): never labels IsFast,
      IsSlow;

  @export
  macro IsFastRegExpPermissive(implicit context: Context)(o: HeapObject): bool {
    BranchIfFastRegExp_Permissive(o) otherwise return true, return false;
  }

  extern macro RegExpBuiltinsAssembler::RegExpExec(Context, Object, Object):
      Object;

  extern macro
  RegExpBuiltinsAssembler::RegExpPrototypeExecBodyWithoutResultFast(
      implicit context: Context)(JSRegExp, String):
      RegExpMatchInfo labels IfDidNotMatch;

  extern macro RegExpBuiltinsAssembler::IsReceiverInitialRegExpPrototype(
      implicit context: Context)(Object): bool;
}
